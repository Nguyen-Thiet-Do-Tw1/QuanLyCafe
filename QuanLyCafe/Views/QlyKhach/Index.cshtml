@model IEnumerable<dynamic>

@{
    ViewData["Title"] = "Danh s√°ch kh√°ch h√†ng";
    Layout = "_AdminLayout";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">üõçÔ∏è Danh s√°ch kh√°ch h√†ng</h2>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addKhachHangModal">
            <i class="fas fa-plus-circle me-2"></i>Th√™m m·ªõi
        </button>
    </div>

    <div class="card shadow mb-4">
        <div class="card-header bg-primary text-white py-3">
            <h6 class="m-0 font-weight-bold">üìã Danh s√°ch kh√°ch h√†ng</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover" id="customerTable">
                    <thead class="table-light">
                        <tr>
                            <th class="d-none">M√£ KH</th>
                            <th>T√™n Kh√°ch H√†ng</th>
                            <th>Li√™n h·ªá</th>
                            <th>ƒê·ªãa ch·ªâ</th>
                            <th class="text-center">H√†nh ƒë·ªông</th>
                        </tr>
                    </thead>
                    <tbody id="customerList">
                        @foreach (var kh in Model)
                        {
                            <tr>
                                <td class="d-none">@kh.Id</td>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <span>@kh.TenKhachHang</span>
                                    </div>
                                </td>
                                <td>
                                    <div class="text-nowrap">
                                        <i class="fas fa-phone me-1 text-muted"></i>@kh.SoDienThoai<br>
                                        <i class="fas fa-envelope me-1 text-muted"></i>@kh.Email
                                    </div>
                                </td>
                                <td class="text-wrap" style="max-width: 300px;">@kh.DiaChiGiaoHang</td>
                                <td>
                                    <div class="d-flex gap-2 justify-content-center">
                                        <button class="btn btn-sm btn-outline-warning" title="Ch·ªânh s·ª≠a"
                                            onclick="editKhachHangForm('@kh.Id')">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger" onclick="deleteKhachHang('@kh.Id')">
                                            <i class="fas fa-trash"></i>
                                        </button>

                                        <button class="btn btn-sm btn-outline-info" title="T√†i kho·∫£n"
                                            onclick="loadTaiKhoan('@kh.Id')">
                                            <i class="fas fa-user-lock"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal hi·ªÉn th·ªã t√†i kho·∫£n kh√°ch h√†ng -->
<div class="modal fade" id="taiKhoanModal" tabindex="-1" aria-labelledby="taiKhoanModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Th√¥ng tin t√†i kho·∫£n</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <table class="table">
                    <thead>
                        <tr>
                            <th>T√™n t√†i kho·∫£n</th>
                            <th>M·∫≠t kh·∫©u</th>
                        </tr>
                    </thead>
                    <tbody id="taiKhoanContent">
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="addKhachHangModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title"><i class="fas fa-user-plus me-2"></i>Th√™m kh√°ch h√†ng</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                    aria-label="Close"></button>
            </div>
            <form id="addKhachHangForm" class="needs-validation" novalidate>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">T√™n kh√°ch h√†ng <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="TenKhachHang" required>
                        <div class="invalid-feedback">Vui l√≤ng nh·∫≠p t√™n kh√°ch h√†ng</div>
                    </div>

                    <div class="row g-3">
                        <div class="col-md-6">
                            <label class="form-label">S·ªë ƒëi·ªán tho·∫°i <span class="text-danger">*</span></label>
                            <input type="tel" class="form-control" id="SoDienThoai" required>
                            <div class="invalid-feedback">Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i</div>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Email</label>
                            <input type="email" class="form-control" id="Email">
                        </div>
                    </div>

                    <div class="mt-3">
                        <label class="form-label">ƒê·ªãa ch·ªâ giao h√†ng</label>
                        <textarea class="form-control" id="DiaChiGiaoHang" rows="2"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">ƒê√≥ng</button>
                    <button type="submit" class="btn btn-primary">
                        <span class="submit-text">Th√™m m·ªõi</span>
                        <div class="spinner-border spinner-border-sm d-none" role="status"></div>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Modal s·ª≠a kh√°ch h√†ng -->
<div class="modal fade" id="editKhachHangModal" tabindex="-1" aria-labelledby="editKhachHangModalLabel"
    aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-white">
                <h5 class="modal-title">Ch·ªânh s·ª≠a Kh√°ch H√†ng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editKhachHangForm">
                    <input type="hidden" id="editKhachHangId" name="Id">
                    <div class="mb-3">
                        <label class="form-label">T√™n Kh√°ch H√†ng</label>
                        <input type="text" class="form-control" id="editTenKhachHang" name="TenKhachHang" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">S·ªë ƒêi·ªán Tho·∫°i</label>
                        <input type="text" class="form-control" id="editSoDienThoai" name="SoDienThoai" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" class="form-control" id="editEmail" name="Email">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">ƒê·ªãa Ch·ªâ Giao H√†ng</label>
                        <input type="text" class="form-control" id="editDiaChiGiaoHang" name="DiaChiGiaoHang">
                    </div>
                    <button type="submit" class="btn btn-success">C·∫≠p Nh·∫≠t</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal th√™m t√†i kho·∫£n -->
<div class="modal fade" id="addTaiKhoanModal" tabindex="-1" aria-labelledby="addTaiKhoanModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="addTaiKhoanModalLabel">Th√™m T√†i Kho·∫£n</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addTaiKhoanForm">
                    <input type="hidden" id="MaKhachHang" name="MaKhachHang">
                    <div class="mb-3">
                        <label class="form-label">T√™n t√†i kho·∫£n</label>
                        <input type="text" class="form-control" id="Username" name="Username" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">M·∫≠t kh·∫©u</label>
                        <input type="password" class="form-control" id="Password" name="Password" required>
                    </div>
                    <button type="submit" class="btn btn-success">Th√™m</button>
                </form>
            </div>
        </div>
    </div>
</div>


<script>

    async function editKhachHangForm(id) {
        try {
            const response = await fetch(`/QlyKhach/GetKhachHangById/${id}`);
            const result = await response.json();

            if (!result.success) {
                alert(result.message || 'L·ªói khi t·∫£i th√¥ng tin kh√°ch h√†ng');
                return;
            }

            // ƒêi·ªÅn d·ªØ li·ªáu v√†o form
            const kh = result.data;
            document.getElementById("editKhachHangId").value = kh.id;
            document.getElementById("editTenKhachHang").value = kh.ten;
            document.getElementById("editSoDienThoai").value = kh.sdt;
            document.getElementById("editEmail").value = kh.email;
            document.getElementById("editDiaChiGiaoHang").value = kh.diachi;

            // Hi·ªÉn th·ªã modal
            new bootstrap.Modal(document.getElementById('editKhachHangModal')).show();
        } catch (error) {
            console.error("L·ªói:", error);
            alert("C√≥ l·ªói x·∫£y ra khi t·∫£i th√¥ng tin kh√°ch h√†ng");
        }
    }

    async function deleteKhachHang(id) {
        if (!confirm("B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a kh√°ch h√†ng n√†y?")) return;

        try {
            const response = await fetch(`/QlyKhach/DeleteKhachHang/${id}`, {
                method: "DELETE",
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            });

            const contentType = response.headers.get("content-type");
            const result = contentType?.includes("application/json") ? await response.json() : null;

            if (!response.ok) {
                throw new Error(result?.message || `HTTP error! status: ${response.status}`);
            }

            if (result.success) {
                // X√≥a h√†ng kh·ªèi b·∫£ng v·ªõi hi·ªáu ·ª©ng
                const row = document.querySelector(`tr[data-id="${id}"]`);
                if (row) {
                    row.style.transition = "opacity 0.5s";
                    row.style.opacity = "0";
                    setTimeout(() => row.remove(), 500);
                }
            }
        } catch (error) {
            console.error("Error:", error);
            alert("C√≥ l·ªói x·∫£y ra khi x√≥a kh√°ch h√†ng!");
        }
    }

    async function loadTaiKhoan(id) {
        try {
            let response = await fetch(`/QlyKhach/GetTaiKhoanKhachHang/${id}`);
            let result = await response.json();

            let taiKhoanContent = document.getElementById("taiKhoanContent");
            taiKhoanContent.innerHTML = "";

            if (result.noAccount) {
                taiKhoanContent.innerHTML = `<tr><td colspan="2" class="text-center">Ch∆∞a c√≥ t√†i kho·∫£n cho kh√°ch h√†ng n√†y.</td></tr>`;
                taiKhoanContent.innerHTML += `
                <tr>
                    <td colspan="2" class="text-center">
                        <button class="btn btn-success btn-sm" onclick="themTaiKhoan('${id}')">Th√™m t√†i kho·∫£n</button>
                    </td>
                </tr>`;
            } else {
                result.data.forEach(taiKhoan => {
                    let row = `<tr>
                    <td>${taiKhoan.username}</td>
                    <td>${taiKhoan.password}</td>
                </tr>`;
                    taiKhoanContent.innerHTML += row;
                });
            }

            let modalElement = document.getElementById("taiKhoanModal");
            let taiKhoanModal = new bootstrap.Modal(modalElement);
            taiKhoanModal.show();
        } catch (error) {
            console.error("L·ªói:", error);
            alert("C√≥ l·ªói x·∫£y ra khi t·∫£i t√†i kho·∫£n!");
        }
    }

    function themTaiKhoan(maKhachHang) {
        document.getElementById("MaKhachHang").value = maKhachHang;
        let addTaiKhoanModal = new bootstrap.Modal(document.getElementById("addTaiKhoanModal"));
        addTaiKhoanModal.show();
    }

    document.addEventListener('DOMContentLoaded', function () {

        document.getElementById("addKhachHangForm").addEventListener("submit", async function (event) {
            event.preventDefault();
            const submitButton = this.querySelector('button[type="submit"]');
            submitButton.disabled = true;
            submitButton.querySelector('.submit-text').classList.add('d-none');
            submitButton.querySelector('.spinner-border').classList.remove('d-none');

            try {
                const formData = new FormData();
                formData.append("TenKhachHang", document.getElementById("TenKhachHang").value);
                formData.append("SoDienThoai", document.getElementById("SoDienThoai").value);
                formData.append("Email", document.getElementById("Email").value);
                formData.append("DiaChiGiaoHang", document.getElementById("DiaChiGiaoHang").value);

                const response = await fetch("/QlyKhach/CreateKhachHang", {
                    method: "POST",
                    body: formData
                });

                const result = await response.json();
                if (result.success) {
                    // Th√™m row m·ªõi v√†o table
                    const newRow = `
                <tr data-id="${result.id}">
                    <td class="d-none">${result.id}</td>
                    <td>${formData.get('TenKhachHang')}</td>
                    <td>
                        <i class="fas fa-phone me-1 text-muted"></i>${formData.get('SoDienThoai')}<br>
                        <i class="fas fa-envelope me-1 text-muted"></i>${formData.get('Email')}
                    </td>
                    <td>${formData.get('DiaChiGiaoHang')}</td>
                    <td>
                        <div class="d-flex gap-2 justify-content-center">
                            <button class="btn btn-sm btn-outline-warning" 
                                onclick="editKhachHangForm('${result.id}', '${formData.get('TenKhachHang')}', 
                                    '${formData.get('SoDienThoai')}', '${formData.get('Email')}', 
                                    '${formData.get('DiaChiGiaoHang')}')">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-danger" 
                                onclick="deleteKhachHang('${result.id}')">
                                <i class="fas fa-trash"></i>
                            </button>
                            <button class="btn btn-sm btn-outline-info" 
                                onclick="loadTaiKhoan('${result.id}')">
                                <i class="fas fa-user-lock"></i>
                            </button>
                        </div>
                    </td>
                </tr>`;

                    document.getElementById('customerList').insertAdjacentHTML('afterbegin', newRow);
                    document.querySelectorAll('.modal-backdrop').forEach(el => el.remove());
                    // Reset l·∫°i tr·∫°ng th√°i body
                    document.body.classList.remove('modal-open');
                    document.body.style = '';
                    $('#addKhachHangModal').modal('hide');
                    this.reset();
                } else {
                    alert(result.message);
                }
            } catch (error) {
                console.error("Error:", error);
                alert("C√≥ l·ªói x·∫£y ra khi th√™m kh√°ch h√†ng!");
            } finally {
                submitButton.disabled = false;
                submitButton.querySelector('.submit-text').classList.remove('d-none');
                submitButton.querySelector('.spinner-border').classList.add('d-none');
            }
        });

        document.getElementById("editKhachHangForm").addEventListener("submit", async function (event) {
            event.preventDefault();
            const id = document.getElementById("editKhachHangId").value;

            try {
                const formData = new FormData();
                formData.append("Id", id);
                formData.append("TenKhachHang", document.getElementById("editTenKhachHang").value);
                formData.append("SoDienThoai", document.getElementById("editSoDienThoai").value);
                formData.append("Email", document.getElementById("editEmail").value);
                formData.append("DiaChiGiaoHang", document.getElementById("editDiaChiGiaoHang").value);

                const response = await fetch("/QlyKhach/EditKhachHang", {
                    method: "POST",
                    body: formData
                });

                const result = await response.json();
                if (result.success) {
                    // T√¨m h√†ng ch·ª©a kh√°ch h√†ng c·∫ßn c·∫≠p nh·∫≠t
                    const rows = document.querySelectorAll('#customerList tr');
                    let targetRow = null;

                    rows.forEach(row => {
                        const idCell = row.querySelector('td.d-none');
                        if (idCell && idCell.textContent === id) {
                            targetRow = row;
                        }
                    });


                    if (targetRow) {
                        // C·∫≠p nh·∫≠t d·ªØ li·ªáu m·ªõi
                        const cells = targetRow.querySelectorAll('td');
                        cells[1].textContent = formData.get('TenKhachHang');
                        cells[2].innerHTML = `
                    <i class="fas fa-phone me-1 text-muted"></i>${formData.get('SoDienThoai')}<br>
                    <i class="fas fa-envelope me-1 text-muted"></i>${formData.get('Email')}
                `;
                        cells[3].textContent = formData.get('DiaChiGiaoHang');
                    }

                    // ƒê√≥ng modal v√† th√¥ng b√°o

                    const editModal = bootstrap.Modal.getInstance(document.getElementById('editKhachHangModal'));
                    editModal.hide();
                    alert('C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!');

                } else {
                    alert(result.message || 'C·∫≠p nh·∫≠t th·∫•t b·∫°i!');
                }
            } catch (error) {
                console.error("Error:", error);
                alert("C√≥ l·ªói x·∫£y ra khi c·∫≠p nh·∫≠t!");
            }
        });



        document.getElementById("addTaiKhoanForm").addEventListener("submit", async function (event) {
            event.preventDefault();

            let formData = new FormData();
            formData.append("MaKhachHang", document.getElementById("MaKhachHang").value);
            formData.append("Username", document.getElementById("Username").value);
            formData.append("Password", document.getElementById("Password").value);

            try {
                let response = await fetch("/QlyKhach/ThemTaiKhoan", {
                    method: "POST",
                    body: formData
                });

                let result = await response.json();
                if (result.success) {
                    alert("Th√™m t√†i kho·∫£n th√†nh c√¥ng!");
                    location.reload();
                } else {
                    alert("L·ªói: " + result.message);
                }
            } catch (error) {
                console.error("L·ªói:", error);
                alert("C√≥ l·ªói x·∫£y ra!");
            }
        });
    });
</script>